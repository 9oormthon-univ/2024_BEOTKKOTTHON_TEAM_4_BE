name: 배포 자동화 파이프라인

on:
  push:
    branches:
      - master
      - develop

permissions:
  contents: read
  actions: read
  id-token: write

jobs:
  deploy_master:
    runs-on: ubuntu-latest
    name: Deploy to Amazon ECS (master)

    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_TOKEN }}
          submodules: true
      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Update Git submodules
        run: git submodule update --remote --recursive
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::125183404358:role/VacgomGithubActionAssumeRole
          aws-region: ap-northeast-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Invoke Gradle
        uses: gradle/gradle-build-action@v2
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build, tag, and push image to Amazon ECR
        env:
          PROFILE: dev
          IMAGE_REPO_URL: ${{ steps.login-ecr.outputs.registry }}/vacgom
          IMAGE_TAG: ${{ github.sha }}_master
        run: ./gradlew jib --parallel
      - name: Download Task Definition
        run: |
          aws ecs describe-task-definition \
          --task-definition vacgom-taskdef \
          --query taskDefinition \
          > task-definition.json
      - name: Update Task Definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: backend
          image: ${{ steps.login-ecr.outputs.registry }}/vacgom:${{ github.sha }}_master
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: vacgom-best-service
          cluster: vacgom-cluster
          wait-for-service-stability: true
      - name: Send Slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: 백곰
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
          
  deploy_develop:
    runs-on: ubuntu-latest
    name: Deploy to Amazon ECS (develop)

    if: github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_TOKEN }}
          submodules: true
      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Update Git submodules
        run: git submodule update --remote --recursive
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::125183404358:role/VacgomGithubActionAssumeRole
          aws-region: ap-northeast-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Invoke Gradle
        uses: gradle/gradle-build-action@v2
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build, tag, and push image to Amazon ECR
        env:
          PROFILE: dev
          IMAGE_REPO_URL: ${{ steps.login-ecr.outputs.registry }}/vacgom
          IMAGE_TAG: ${{ github.sha }}_dev
        run: ./gradlew jib --parallel
      - name: Download Task Definition
        run: |
          aws ecs describe-task-definition \
          --task-definition vacgom-taskdef-dev \
          --query taskDefinition \
          > task-definition.json
      - name: Update Task Definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: backend
          image: ${{ steps.login-ecr.outputs.registry }}/vacgom:${{ github.sha }}_dev
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: vacgom-service-dev
          cluster: vacgom-cluster
          wait-for-service-stability: true
      - name: Send Slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: 백곰
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
